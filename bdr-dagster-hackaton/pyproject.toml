[project]
name = "dagster_x_duckdb_hackathon"
requires-python = ">=3.9,<3.13"
version = "0.1.0"
dependencies = [
    "dagster==1.10.19",
    "dagster-duckdb>=0.26.19",
    "dagster-duckdb-pandas>=0.26.19",
]

[dependency-groups]
dev = [
    "dagster-webserver",
    "dagster-dg-cli[local]",
    "ruff>=0.11.13",
    "pytest>=8.4.0",
    "pytest-cov>=6.1.1",
    "marimo>=0.14.16",
]

[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[tool.dg]
directory_type = "project"

[tool.dg.project]
root_module = "dagster_x_duckdb_hackathon"
autoload_defs = true


[tool.dg.project.python_environment]
active = true

[tool.pytest.ini_options]
testpaths = ["tests"]

[tool.ruff]
target-version = "py311"
line-length = 120
fix = true

[tool.ruff.lint]
select = [
    # flake8-2020
    "YTT",
    # flake8-bandit
    "S",
    # flake8-bugbear
    "B",
    # flake8-builtins
    "A",
    # flake8-comprehensions
    "C4",
    # flake8-debugger
    "T10",
    # flake8-simplify
    "SIM",
    # isort
    "I",
    # mccabe
    "C90",
    # pycodestyle
    "E",
    "W",
    # pyflakes
    "F",
    # pygrep-hooks
    "PGH",
    # pyupgrade
    "UP",
    # ruff
    "RUF",
    # tryceratops
    "TRY",
]
ignore = [
    # LineTooLong
    "E501",
    # DoNotAssignLambda
    "E731",
]

[tool.ruff.lint.per-file-ignores]
"tests/*" = ["S101"]

[tool.ruff.format]
preview = true

[tool.coverage.report]
skip_empty = true

[tool.coverage.run]
branch = true
source = ["src"]
